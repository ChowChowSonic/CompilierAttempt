import test; 
int alpha //Same thing as C/C++, can only be set to constants
int x = 5 //equivalent of Java's Static modifier
int pointer xptr = ->x

object Integer{ 
    int length
    constructor(){
		this.length = 5
        println "inside the vector constructor"
    }
}

//All code blocks except objects have optional curly braces,
//but they only accept 1 statement if you don't enclose them
int test(int a, int b) 
    return a*b

int main(int args, char** argv)
{
    Integer array = Integer
    for(int i = 0; i < array.length; i++){
		i! //Language feature #1: Inline debug printing
		?? array.length! 
		 ? This is a multi-line comment. 
		?? 
	}

	switch auto break array.length{ //Language Feature #2: Switch-AutoBreak stmts
	case 0{
		continue
	}
	case 1, 2{
		continue
	}
	default{
		println "default reached:", array.length
		continue
	}
	case 3{
	}
	case 4{
		throw 5
	}
	case 5 ... 10, 20 ... 30{ //Language Feature #3: Case-Range Stmts
			println "This will print when (something >=5 && something < 10) || (something >= 20 && something < 30)"
	}
	case 30 ... 40 : 2{
			println "This will print when something is 30, 32, 34, 36 or 38"
	}
	}

	//(5 ... 1) //Language Feature #4: the Range operator

	//Language feature #5: N-Way comparison statements

	// 5 > 4 && 4 > 3
	if 5 > 4 > 3
	    println "This will always print"
	//10 > array.length && array.length == 5 
	if 10 > array.length == 5
		println "This will also always print"
	return 1
}