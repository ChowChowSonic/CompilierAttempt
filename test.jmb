object _IO_FILE{}
object _IO_marker{}
object _IO_codecvt{}
object _IO_wide_data{}
object _IO_lock_t{}
object _IO_FILE
{
    int _flags;
    char *_IO_read_ptr;	
    char *_IO_read_end;	
    char *_IO_read_base;	
    char *_IO_write_base;	
    char *_IO_write_ptr;	
    char *_IO_write_end;	
    char *_IO_buf_base;	
    char *_IO_buf_end;	
    char *_IO_save_base; 
    char *_IO_backup_base;  
    char *_IO_save_end; 
    _IO_marker *_markers;
    _IO_FILE *_chain;
    int _fileno;
    int _flags2;
    long _old_offset; 
    short _cur_column;
    char _vtable_offset;
    char _shortbuf;
    _IO_lock_t *_lock;

};
int fclose(_IO_FILE* internal); 
int fgetc(_IO_FILE* internal);
_IO_FILE* fopen(string name, string rwxstr); 


object file{
	_IO_FILE* internal
	constructor(string filename, bool readOnly){
		if readOnly {
			this.internal = fopen(filename, "r")
		}else{
			this.internal = fopen(filename, "rw")
		}
	}
    char read(){
        return fgetc(this.internal) as char
    }
    int close(){
        fclose(this.internal)
        return 0;
    }
}